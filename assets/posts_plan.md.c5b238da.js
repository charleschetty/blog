import{_ as e,o as r,c as a,O as t}from"./chunks/framework.ef0174de.js";const d=JSON.parse('{"title":"未来的学习计划","description":"CS技术栈学习","frontmatter":{"date":"2023-01-13T00:00:00.000Z","title":"未来的学习计划","tags":["book"],"description":"CS技术栈学习","lastUpdated":true},"headers":[],"relativePath":"posts/plan.md","filePath":"posts/plan.md"}'),l={name:"posts/plan.md"},o=t('<p>我这人是不习惯没干成什么事就开始出来吆喝的，但我认为这样会更好地促进我学习，自己吹的牛逼实现不了那会是一件很尴尬的事情，于是，就有了这篇文章。</p><p>目前我正在申CS的phd，打算做机器学习/云计算，具体做什么取决于到时候谁要我，如果最后都不成，那只能做RA gap一年。但无论做啥方向，我认为作为一个合格的CSphd， 是有必要了解各种CS技术栈的，当然没必要cover所有，但至少把一到两门做到合格，目前我选的方向是后端开发，主力C/CPP/RUST。本科期间的学习过程在<a href="https://charleschetty.github.io/blog/posts/shu.html" target="_blank" rel="noreferrer">这</a>。</p><h2 id="c-cpp-基础" tabindex="-1">C/CPP 基础 <a class="header-anchor" href="#c-cpp-基础" aria-label="Permalink to &quot;C/CPP 基础&quot;">​</a></h2><p>已经看完</p><ul><li><a href="https://book.douban.com/subject/25708312/" target="_blank" rel="noreferrer">C++ primer</a>：看完以后就是C with CLASS and STL</li><li><a href="https://github.com/xiaoweiChen/CPP-Concurrency-In-Action-2ed-2019" target="_blank" rel="noreferrer">C++ Concurrency In Action</a>：Ok, 现在再加个multi threads.</li><li><a href="https://github.com/xiaoweiChen/Concurrency-with-Modern-Cpp" target="_blank" rel="noreferrer">Concurrency with Modern C++</a>：和上面选一个就行</li></ul><p>未来要看</p><ul><li><a href="https://book.douban.com/subject/1842426/" target="_blank" rel="noreferrer">Effective C++</a></li><li><a href="https://book.douban.com/author/104680/" target="_blank" rel="noreferrer">Scott Meyers全集</a>：我觉得上一本是必要的，其他看情况吧。</li><li><a href="https://zh.cppreference.com/w/cpp" target="_blank" rel="noreferrer">cpp 文档</a>：学CPP新特性，这玩意是个无底洞，闲没事看吧，推荐个做的比较好的<a href="https://space.bilibili.com/1292761396" target="_blank" rel="noreferrer">up</a></li></ul><p>博客推荐：</p><ul><li><a href="https://www.bennyhuo.com/" target="_blank" rel="noreferrer">bennyhuo</a>：这人对协程有种执念</li></ul><h2 id="rust-基础" tabindex="-1">Rust 基础 <a class="header-anchor" href="#rust-基础" aria-label="Permalink to &quot;Rust 基础&quot;">​</a></h2><p>已经看完</p><ul><li><a href="https://course.rs/about-book.html" target="_blank" rel="noreferrer">Rust圣经</a>：做的比官方教程好，推荐看这个</li><li><a href="https://github.com/tyrchen/geektime-rust" target="_blank" rel="noreferrer">Rust第一课</a>：付费教程，做的很好，不愿意花钱的话网上有电子版</li><li><a href="https://www.bilibili.com/video/BV1b54y1X7my?p=1" target="_blank" rel="noreferrer">Rust网络编程</a>：感觉有些过时了，grpc用的那库两年不更新了，但这是我目前网络上找的唯一还算系统的材料</li></ul><p>未来要看</p><ul><li><a href="https://tokio.rs/" target="_blank" rel="noreferrer">tokio</a>：这已经算是RUST必学内容了，tokio不会都不好意思说学过Rust，一个月内必看完。</li><li><a href="https://blessed.rs/crates" target="_blank" rel="noreferrer">常用库</a>：按需求看吧，这个是长期工作。</li></ul><p>推荐博客</p><ul><li><a href="https://space.bilibili.com/39222989/" target="_blank" rel="noreferrer">陈天</a>：我打算跟着他的视频自己多写几个项目。</li></ul><h2 id="操作系统" tabindex="-1">操作系统 <a class="header-anchor" href="#操作系统" aria-label="Permalink to &quot;操作系统&quot;">​</a></h2><p>已经看完</p><ul><li><a href="https://item.jd.com/12703741.html" target="_blank" rel="noreferrer">操作系统――精髓与设计原理</a>：准确说没看完，剩下嵌入式没看，有空给他看了。</li></ul><p>未来要看</p><ul><li><a href="https://rcore-os.cn/rCore-Tutorial-Book-v3/" target="_blank" rel="noreferrer">rcore-os</a>：拿Rust手写一个操作系统</li><li><a href="https://item.jd.com/12887758.html" target="_blank" rel="noreferrer">计算机组成与设计：硬件/软件接口RISC-V版</a>：得先了解RISC-V</li><li><a href="https://book.douban.com/subject/6097773/" target="_blank" rel="noreferrer">Linux内核设计与实现</a>：做后端必看</li><li><a href="https://book.douban.com/subject/1788421/" target="_blank" rel="noreferrer">UNIX环境高级编程</a>：如果上一本看完了还有空，那就开这本</li></ul><h2 id="计算机网络" tabindex="-1">计算机网络 <a class="header-anchor" href="#计算机网络" aria-label="Permalink to &quot;计算机网络&quot;">​</a></h2><p>已经看完</p><ul><li><a href="https://item.jd.com/13314046.html" target="_blank" rel="noreferrer">计算机网络 谢希仁</a>：准确说没看完，看到第六章</li></ul><p>未来要看</p><ul><li><a href="https://item.jd.com/13280784.html" target="_blank" rel="noreferrer">Linux多线程服务端编程</a>：准确讲是本比较综合的书，最近打算开，啥时候看完没个数</li><li><a href="https://item.jd.com/13684602.html" target="_blank" rel="noreferrer">UNIX网络编程</a>：上一本看完再说</li><li><a href="https://item.jd.com/12504771.html" target="_blank" rel="noreferrer">TCP/IP详解</a>：第一册相当于国内主流计网课的内容，上一本看完再说。</li></ul><h2 id="数据结构算法" tabindex="-1">数据结构算法 <a class="header-anchor" href="#数据结构算法" aria-label="Permalink to &quot;数据结构算法&quot;">​</a></h2><p>已经看完</p><ul><li><a href="https://item.jd.com/11678536.html" target="_blank" rel="noreferrer">数据结构、算法与应用：C++语言描述</a>：我的入门书</li><li><a href="https://item.jd.com/11098789.html" target="_blank" rel="noreferrer">算法4</a>：讲的很通俗，比上一本好，推荐都看</li></ul><p>未来要看</p><ul><li><a href="https://item.jd.com/11144230.html" target="_blank" rel="noreferrer">算法导论</a>：不是很打算开，看情况吧</li></ul><h2 id="图形库" tabindex="-1">图形库 <a class="header-anchor" href="#图形库" aria-label="Permalink to &quot;图形库&quot;">​</a></h2><p>已经看完</p><ul><li><a href="https://item.jd.com/13416896.html" target="_blank" rel="noreferrer">Qt 5.9 C++开发指南</a> ：我把前6章敲了代码，有必要的话可以深入学。</li></ul><p>未来要看</p><ul><li><a href="https://tauri.app/" target="_blank" rel="noreferrer">tauri</a>：这玩意得先学前端，目前打算对着<a href="https://web.qianguyihao.com/" target="_blank" rel="noreferrer">这个</a>路线学</li><li><a href="https://www.gtk.org/" target="_blank" rel="noreferrer">gtk</a>：理论上跨平台，实际上绝大多都是用来写Linux Gui</li></ul><h2 id="java" tabindex="-1">Java <a class="header-anchor" href="#java" aria-label="Permalink to &quot;Java&quot;">​</a></h2><p>目前没有打算</p><h2 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端&quot;">​</a></h2><p>目前有打算，等着再说</p><h2 id="机器学习-算法岗" tabindex="-1">机器学习/算法岗 <a class="header-anchor" href="#机器学习-算法岗" aria-label="Permalink to &quot;机器学习/算法岗&quot;">​</a></h2><p>是我Phd申请方向之一，等着再整理</p><h2 id="项目实战" tabindex="-1">项目实战 <a class="header-anchor" href="#项目实战" aria-label="Permalink to &quot;项目实战&quot;">​</a></h2><p>等着再说，现在也想不好写啥</p>',44),i=[o];function h(n,p,s,c,u,b){return r(),a("div",null,i)}const m=e(l,[["render",h]]);export{d as __pageData,m as default};
